basePath: /api/v1
definitions:
  api.createCustomerRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - full_name
    - password
    - phone_number
    type: object
  api.createExaminationBookingRequest:
    properties:
      customer_id:
        type: integer
      customer_reason:
        type: string
      examination_schedule_id:
        type: integer
      payment_id:
        type: integer
    required:
    - customer_id
    - examination_schedule_id
    - payment_id
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      user_info:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.userResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      phone_number:
        type: string
      role:
        type: string
    type: object
  db.ServiceCategory:
    properties:
      created_at:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      price:
        type: integer
      slug:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: cvphuoc2014@gmail.com
    name: Châu Vĩnh Phước
  description: API documentation for the Dental Clinic application.
  title: Dental Clinic API
  version: 1.0.0
paths:
  /bookings/examination:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create examination booking
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/api.createExaminationBookingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - accessToken: []
      summary: create a new examination booking
      tags:
      - bookings
  /service-categories:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.ServiceCategory'
            type: array
        "500":
          description: Internal Server Error
      summary: list all service categories
      tags:
      - services
  /users:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/api.createCustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: create a new customer
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: log in a user
      tags:
      - users
securityDefinitions:
  accessToken:
    description: JWT Authorization header using the Bearer scheme.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
