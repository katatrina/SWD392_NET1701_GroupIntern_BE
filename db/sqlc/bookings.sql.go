// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: bookings.sql

package db

import (
	"context"
)

const createExaminationBooking = `-- name: CreateExaminationBooking :one
INSERT INTO bookings (type, customer_id, customer_reason, payment_id)
VALUES ('examination', $1, $2, $3) RETURNING id, type, customer_id, customer_reason, payment_status, payment_id, is_cancelled, created_at
`

type CreateExaminationBookingParams struct {
	CustomerID     int64  `json:"customer_id"`
	CustomerReason string `json:"customer_reason"`
	PaymentID      int64  `json:"payment_id"`
}

func (q *Queries) CreateExaminationBooking(ctx context.Context, arg CreateExaminationBookingParams) (Booking, error) {
	row := q.db.QueryRowContext(ctx, createExaminationBooking, arg.CustomerID, arg.CustomerReason, arg.PaymentID)
	var i Booking
	err := row.Scan(
		&i.ID,
		&i.Type,
		&i.CustomerID,
		&i.CustomerReason,
		&i.PaymentStatus,
		&i.PaymentID,
		&i.IsCancelled,
		&i.CreatedAt,
	)
	return i, err
}
